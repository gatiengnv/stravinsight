services:
    php:
        image: ${IMAGES_PREFIX:-}app-php
        restart: unless-stopped
        environment:
            SERVER_NAME: :80, php:80
            MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
            DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-password}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
            # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
            MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
            MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
            MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            # The two next lines can be removed after initial installation
            SYMFONY_VERSION: ${SYMFONY_VERSION:-}
            STABILITY: ${STABILITY:-stable}
        volumes:
            - caddy_data:/data
            - caddy_config:/config
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.constraint-label=traefik-public
            - traefik.http.routers.stravanalytics-http.rule=Host(`${DOMAIN?Variable not set}`)
            - traefik.http.routers.stravanalytics-http.entrypoints=http
            - traefik.http.routers.stravanalytics-https.rule=Host(`${DOMAIN?Variable not set}`)
            - traefik.http.routers.stravanalytics-https.entrypoints=https
            - traefik.http.routers.stravanalytics-https.tls=true
            - traefik.http.routers.stravanalytics-https.tls.certresolver=le
            - traefik.http.services.stravanalytics.loadbalancer.server.port=80
        networks:
            - traefik-public
    
    
    # Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
    ###> symfony/mercure-bundle ###
    ###< symfony/mercure-bundle ###
    
    ###> doctrine/doctrine-bundle ###
    database:
        image: postgres:${POSTGRES_VERSION:-16}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            # You should definitely change the password in production
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        healthcheck:
            test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
            timeout: 5s
            retries: 5
            start_period: 60s
        volumes:
            - database_data:/var/lib/postgresql/data:rw
        restart:
            always
        # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
        # - ./docker/db/data:/var/lib/postgresql/data:rw
        ###< doctrine/doctrine-bundle ###
        networks:
            - traefik-public
    
    adminer:
        image: adminer
        restart: unless-stopped
        environment:
            ADMINER_DEFAULT_SERVER: database
        ports:
            - "8081:8080"
        depends_on:
            - database
    
    python:
        build:
            context: .
            dockerfile: ai/Dockerfile
        restart: unless-stopped
        volumes:
            - ./ai:/app
        depends_on:
            - php
        networks:
            - traefik-public

volumes:
    caddy_data:
    caddy_config:
    ###> symfony/mercure-bundle ###
    ###< symfony/mercure-bundle ###
    
    ###> doctrine/doctrine-bundle ###
    database_data:
###< doctrine/doctrine-bundle ###

networks:
    traefik-public:
        external: true
